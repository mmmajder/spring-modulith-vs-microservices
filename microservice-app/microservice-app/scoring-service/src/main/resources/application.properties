spring.application.name=scoring-service
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=none

spring.datasource.initialization-mode=always
spring.datasource.url=jdbc:h2:mem:scoringdb;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS SCORING
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.platform=h2

spring.h2.console.enabled=true
spring.h2.console.path=/h2
#spring.security.user.name=admin
#spring.security.user.password=admin

server.port=8087

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/spring-microservices-security-realm

springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

#Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.consumer.group-id=scoringId
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=
event:org.example.events.WorkoutPerformedEvent,
referralRewardedEvent:org.example.events.ReferralRewardedEvent
spring.kafka.consumer.properties.spring.json.trusted.packages=org.example.events

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer